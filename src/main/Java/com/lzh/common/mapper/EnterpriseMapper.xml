<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzh.common.mapper.EnterpriseMapper" >
  <resultMap id="BaseResultMap" type="com.lzh.common.entity.Enterprise" >
    <id column="eid" property="eid" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="quality" property="quality" jdbcType="VARCHAR" />
    <result column="trade" property="trade" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="employnum" property="employnum" jdbcType="VARCHAR" />
    <result column="synopsis" property="synopsis" jdbcType="VARCHAR" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="addr" property="addr" jdbcType="VARCHAR" />
    <result column="checkstate" property="checkstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    eid, name, quality, trade, region, employnum, synopsis, contact, phone, email, addr, 
    checkstate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lzh.common.entity.EnterpriseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enterprise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from enterprise
    where eid = #{eid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from enterprise
    where eid = #{eid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzh.common.entity.EnterpriseExample" >
    delete from enterprise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzh.common.entity.Enterprise" >
    insert into enterprise (eid, name, quality, 
      trade, region, employnum, 
      synopsis, contact, phone, 
      email, addr, checkstate
      )
    values (#{eid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{quality,jdbcType=VARCHAR}, 
      #{trade,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{employnum,jdbcType=VARCHAR}, 
      #{synopsis,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{addr,jdbcType=VARCHAR}, #{checkstate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lzh.common.entity.Enterprise" >
    insert into enterprise
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        eid,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="quality != null" >
        quality,
      </if>
      <if test="trade != null" >
        trade,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="employnum != null" >
        employnum,
      </if>
      <if test="synopsis != null" >
        synopsis,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="addr != null" >
        addr,
      </if>
      <if test="checkstate != null" >
        checkstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eid != null" >
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="quality != null" >
        #{quality,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        #{trade,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="employnum != null" >
        #{employnum,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        #{addr,jdbcType=VARCHAR},
      </if>
      <if test="checkstate != null" >
        #{checkstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzh.common.entity.EnterpriseExample" resultType="java.lang.Integer" >
    select count(*) from enterprise
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update enterprise
    <set >
      <if test="record.eid != null" >
        eid = #{record.eid,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.quality != null" >
        quality = #{record.quality,jdbcType=VARCHAR},
      </if>
      <if test="record.trade != null" >
        trade = #{record.trade,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.employnum != null" >
        employnum = #{record.employnum,jdbcType=VARCHAR},
      </if>
      <if test="record.synopsis != null" >
        synopsis = #{record.synopsis,jdbcType=VARCHAR},
      </if>
      <if test="record.contact != null" >
        contact = #{record.contact,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.addr != null" >
        addr = #{record.addr,jdbcType=VARCHAR},
      </if>
      <if test="record.checkstate != null" >
        checkstate = #{record.checkstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update enterprise
    set eid = #{record.eid,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      quality = #{record.quality,jdbcType=VARCHAR},
      trade = #{record.trade,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      employnum = #{record.employnum,jdbcType=VARCHAR},
      synopsis = #{record.synopsis,jdbcType=VARCHAR},
      contact = #{record.contact,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      addr = #{record.addr,jdbcType=VARCHAR},
      checkstate = #{record.checkstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzh.common.entity.Enterprise" >
    update enterprise
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="quality != null" >
        quality = #{quality,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        trade = #{trade,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="employnum != null" >
        employnum = #{employnum,jdbcType=VARCHAR},
      </if>
      <if test="synopsis != null" >
        synopsis = #{synopsis,jdbcType=VARCHAR},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="addr != null" >
        addr = #{addr,jdbcType=VARCHAR},
      </if>
      <if test="checkstate != null" >
        checkstate = #{checkstate,jdbcType=INTEGER},
      </if>
    </set>
    where eid = #{eid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzh.common.entity.Enterprise" >
    update enterprise
    set name = #{name,jdbcType=VARCHAR},
      quality = #{quality,jdbcType=VARCHAR},
      trade = #{trade,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      employnum = #{employnum,jdbcType=VARCHAR},
      synopsis = #{synopsis,jdbcType=VARCHAR},
      contact = #{contact,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      addr = #{addr,jdbcType=VARCHAR},
      checkstate = #{checkstate,jdbcType=INTEGER}
    where eid = #{eid,jdbcType=INTEGER}
  </update>
</mapper>