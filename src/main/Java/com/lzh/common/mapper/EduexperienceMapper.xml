<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lzh.common.mapper.EduexperienceMapper" >
  <resultMap id="BaseResultMap" type="com.lzh.common.entity.Eduexperience" >
    <id column="aid" property="aid" jdbcType="INTEGER" />
    <result column="begintime" property="begintime" jdbcType="TIMESTAMP" />
    <result column="endtime" property="endtime" jdbcType="TIMESTAMP" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="checkstate" property="checkstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    aid, begintime, endtime, degree, school, checkstate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.lzh.common.entity.EduexperienceExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from eduexperience
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from eduexperience
    where aid = #{aid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from eduexperience
    where aid = #{aid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lzh.common.entity.EduexperienceExample" >
    delete from eduexperience
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lzh.common.entity.Eduexperience" >
    insert into eduexperience (aid, begintime, endtime, 
      degree, school, checkstate
      )
    values (#{aid,jdbcType=INTEGER}, #{begintime,jdbcType=TIMESTAMP}, #{endtime,jdbcType=TIMESTAMP}, 
      #{degree,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{checkstate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lzh.common.entity.Eduexperience" >
    insert into eduexperience
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        aid,
      </if>
      <if test="begintime != null" >
        begintime,
      </if>
      <if test="endtime != null" >
        endtime,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="checkstate != null" >
        checkstate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="aid != null" >
        #{aid,jdbcType=INTEGER},
      </if>
      <if test="begintime != null" >
        #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="checkstate != null" >
        #{checkstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lzh.common.entity.EduexperienceExample" resultType="java.lang.Integer" >
    select count(*) from eduexperience
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update eduexperience
    <set >
      <if test="record.aid != null" >
        aid = #{record.aid,jdbcType=INTEGER},
      </if>
      <if test="record.begintime != null" >
        begintime = #{record.begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endtime != null" >
        endtime = #{record.endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.checkstate != null" >
        checkstate = #{record.checkstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update eduexperience
    set aid = #{record.aid,jdbcType=INTEGER},
      begintime = #{record.begintime,jdbcType=TIMESTAMP},
      endtime = #{record.endtime,jdbcType=TIMESTAMP},
      degree = #{record.degree,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      checkstate = #{record.checkstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lzh.common.entity.Eduexperience" >
    update eduexperience
    <set >
      <if test="begintime != null" >
        begintime = #{begintime,jdbcType=TIMESTAMP},
      </if>
      <if test="endtime != null" >
        endtime = #{endtime,jdbcType=TIMESTAMP},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="checkstate != null" >
        checkstate = #{checkstate,jdbcType=INTEGER},
      </if>
    </set>
    where aid = #{aid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lzh.common.entity.Eduexperience" >
    update eduexperience
    set begintime = #{begintime,jdbcType=TIMESTAMP},
      endtime = #{endtime,jdbcType=TIMESTAMP},
      degree = #{degree,jdbcType=VARCHAR},
      school = #{school,jdbcType=VARCHAR},
      checkstate = #{checkstate,jdbcType=INTEGER}
    where aid = #{aid,jdbcType=INTEGER}
  </update>
</mapper>